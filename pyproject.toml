# ----
# Ruff
# ----

[tool.ruff]
target-version = "py310"
line-length = 99
lint.select = [  # pragma: alphabetize
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E713",  # Test for membership should be 'not in'
    "E714",  # Test for object identity should be 'is not'
    "E722",  # Do not use bare `except:`
    "F401",  # Module imported but unused
    "F541",  # F-string is missing placeholders
    "I",  # isort
    "INP",  # flake8-no-pep420
    "N804",  # First argument of a class method should be named `cls`
    "N805",  # First argument of a method should be named `self`
    "RUF008",  # mutable-dataclass-default (prevents mutable shared state)
    "RUF012",  # mutable-class-default (prevents mutable shared state)
    "RUF100",  # Unused `noqa` directive
    "S", # bandit
    "T20",  # flake8-print
    "TRY302",  # tryceratops (useless-try-except)
    "UP",  # pyupgrade
]

lint.ignore = [  # pragma: alphabetize
    "B007",  # Loop control variable not used within the loop body
    "B026",  # Star-arg unpacking after a keyword argument is strongly discouraged
    "B034",  # keyword arguments to avoid confusion due to unintuitive argument positions
    "B905",  # `zip()` without an explicit `strict=` parameter
    "UP032", # Use f-string instead of `format` call # TODO: Convert these to f-strings and remove ignore

    # Security rules
    # --------------
    "S101",  # Use of `assert` detected
             # Status: We run with asserts enabled in production, and advise against using them for application logic.

    "S113",  # Probable use of requests call without timeout
             # Status: Unknown, needs review.

    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
             # Status: Generally used for non-cryptographic purposes, but needs review.

    "S314",  # Using `xml` to parse untrusted data is known to be vulnerable to XML attacks; use `defusedxml` equivalents
             # Status: We should replace `xml` with `defusedxml`, though this is a low priority.

    "S320",  # Using `lxml` to parse untrusted data is known to be vulnerable to XML attacks
             # Status: Using any xml parser is potentially going to DDOS a server. https://github.com/tiran/defusedxml#attack-vectors
             # We use `lxml` by creating a parser that prevents entity expansion:
             #    parser = etree.XMLParser(resolve_entities=False)
             # This protects against the various expansion bomb attacks. We don't use xpaths from untrusted sources, and we don't
             # accept gzipped XML from untrusted sources. `lxml` doesn't look up DTDs over the network by default (see
             # https://lxml.de/parsing.html#parsers for options).
             # https://lxml.de/FAQ.html#how-do-i-use-lxml-safely-as-a-web-service-endpoint
]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "project",
    "local-folder",
]
[tool.ruff.lint.isort.sections]
"project" = [
    "core",
    "tests",
]

[tool.ruff.lint.flake8-bugbear]
# Exclude some calls from B008.
# These are function calls that are allowed in default arguments because they
# are non-volatile (i.e. they return constant, immutable values) and do not
# impose any unnecessary import-time burden.
extend-immutable-calls = [
    "cast",
    "D",  # common alias for decimal.Decimal
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "Decimal",
    "decimal.Decimal",
    "float",
    "frozendict",
]


# ----
# Mypy
# ----
[tool.mypy]
ignore_missing_imports = true
disable_error_code = "import-untyped"
